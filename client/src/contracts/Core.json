{
  "contractName": "Core",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "Butchered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "Eaten",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "ForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "Raised",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "Sold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "Transported",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cowIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cows",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMeat",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "farmer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "butcher",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currentLocation",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getButcher",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getButchered",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConsumer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowButcher",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowButcherAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowById",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMeat",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "farmer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "butcher",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currentLocation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowFarmerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowIsMeat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowIsPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowLocation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "getCowWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFarmer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getForSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSenderRole",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransportConfirmed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransported",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cowId",
          "type": "uint256"
        }
      ],
      "name": "pushCowId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "butcherAddress",
          "type": "address"
        }
      ],
      "name": "setButcher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "consumerAddress",
          "type": "address"
        }
      ],
      "name": "setConsumer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "setCowButcher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "setCowIsMeat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setCowPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        }
      ],
      "name": "setCowState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "setCowWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "farmerAddress",
          "type": "address"
        }
      ],
      "name": "setFarmer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownable",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cowId",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"Butchered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Eaten\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"ForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"Raised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"Transported\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cowIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cows\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMeat\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"farmer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"butcher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentLocation\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getButcher\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getButchered\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConsumer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowButcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowButcherAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowById\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMeat\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"farmer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"butcher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentLocation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowFarmerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowIsMeat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowIsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowLocation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"getCowWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFarmer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSenderRole\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransportConfirmed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransported\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cowId\",\"type\":\"uint256\"}],\"name\":\"pushCowId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"butcherAddress\",\"type\":\"address\"}],\"name\":\"setButcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"consumerAddress\",\"type\":\"address\"}],\"name\":\"setConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"setCowButcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"}],\"name\":\"setCowIsMeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setCowPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"setCowState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cowId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"setCowWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"farmerAddress\",\"type\":\"address\"}],\"name\":\"setFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Core.sol\":\"Core\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/samfa/Documents/BCNanodegree/project3/contracts/AccessControl.sol\":{\"keccak256\":\"0x3f461011d4f14149ba2bd5817b18ce00ee518dadb3a35d32c8b6a03b908ca8da\",\"urls\":[\"bzz-raw://1f70084762d979fd787cdf855d6ebcc5659ed58b31bac205368c70b486638ec3\",\"dweb:/ipfs/Qmbn9rGXr9YFzPQqx3VUmj86CQk78QpXFmvFUtVTddUXds\"]},\"/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Base.sol\":{\"keccak256\":\"0x29f5efdc266531e352fe067cd7b1793d08e5b1c4bf098e1c90ac6ecd83734243\",\"urls\":[\"bzz-raw://a5350f3b2f5b1ec9074334adbe421b6b2820461bfe695460f792450928931c74\",\"dweb:/ipfs/QmaBtgfeZQjrz2uXQ7cqaSqHPHTuyLHW9qZxSLpL2DxR51\"]},\"/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Core.sol\":{\"keccak256\":\"0x907483e919b99fbdde7799db7aaf6a474d6ecc500656fc282f75dc7de72e59c7\",\"urls\":[\"bzz-raw://bbc6fb360e2b5b0aac7c5b6d48e8a262839f9be487a4345a128cda8d3fdfe84d\",\"dweb:/ipfs/QmebpE94tDHy4WSswc3XCF7HrZnYjNQECh7fw2qgEBeZDj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610083600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661008860201b60201c565b6100dd565b6000600281111561009557fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b61144e806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063804c2cf811610125578063baed3290116100ad578063f74bb9141161007c578063f74bb914146109d9578063fb5f39e214610a1b578063fcd2cf7614610a5d578063fd1d909214610a7b578063fe3c7d3e14610aa95761021c565b8063baed3290146108ef578063db7ef4c814610933578063e2ed781c14610977578063efbfdd45146109bb5761021c565b80638f282b87116100f45780638f282b87146107f95780639a90b568146108175780639dfda79414610835578063a925c06514610863578063b38854be146108bb5761021c565b8063804c2cf81461070d578063893d20e81461072b5780638b3f863f1461075f5780638d6fe2bf146107b75761021c565b80633b928b7b116101a85780635f5d6e63116101775780635f5d6e63146105f957806363a579d5146106315780636c07681f14610675578063748a070e146106935780637e82e70a146106d55761021c565b80633b928b7b1461046f5780633e4ff0561461052f5780633e8d5562146105875780634a409359146105cb5761021c565b8063136439dd116101ef578063136439dd146102ed5780632388ec4c1461031b5780632cd6d05b146103395780633a88162e146103f95780633b573e21146104175761021c565b806302d70d5e146102215780630a5ba91b146102595780630d5fe8d01461027757806312065fe0146102cf575b600080fd5b6102576004803603604081101561023757600080fd5b810190808035906020019092919080359060200190929190505050610aeb565b005b610261610b0a565b6040518082815260200191505060405180910390f35b6102a36004803603602081101561028d57600080fd5b8101908080359060200190929190505050610b23565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d7610b63565b6040518082815260200191505060405180910390f35b6103196004803603602081101561030357600080fd5b8101908080359060200190929190505050610b82565b005b610323610c18565b6040518082815260200191505060405180910390f35b6103656004803603602081101561034f57600080fd5b8101908080359060200190929190505050610c2b565b604051808a1515815260200189151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001995050505050505050505060405180910390f35b610401610d8b565b6040518082815260200191505060405180910390f35b6104436004803603602081101561042d57600080fd5b8101908080359060200190929190505050610dd4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61049b6004803603602081101561048557600080fd5b8101908080359060200190929190505050610e14565b604051808a1515815260200189151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001995050505050505050505060405180910390f35b61055b6004803603602081101561054557600080fd5b8101908080359060200190929190505050610edc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c96004803603602081101561059d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b005b6105f7600480360360208110156105e157600080fd5b8101908080359060200190929190505050610f71565b005b61062f6004803603604081101561060f57600080fd5b810190808035906020019092919080359060200190929190505050611007565b005b6106736004803603602081101561064757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611026565b005b61067d61107a565b6040518082815260200191505060405180910390f35b6106bf600480360360208110156106a957600080fd5b810190808035906020019092919050505061108d565b6040518082815260200191505060405180910390f35b61070b600480360360408110156106eb57600080fd5b8101908080359060200190929190803590602001909291905050506110ae565b005b6107156110cd565b6040518082815260200191505060405180910390f35b6107336110e6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107a16004803603602081101561077557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611110565b6040518082815260200191505060405180910390f35b6107e3600480360360208110156107cd57600080fd5b810190808035906020019092919050505061115b565b6040518082815260200191505060405180910390f35b61080161117b565b6040518082815260200191505060405180910390f35b61081f611194565b6040518082815260200191505060405180910390f35b6108616004803603602081101561084b57600080fd5b81019080803590602001909291905050506111a8565b005b61088f6004803603602081101561087957600080fd5b8101908080359060200190929190505050611200565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108c3611240565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61091b6004803603602081101561090557600080fd5b81019080803590602001909291905050506112ab565b60405180821515815260200191505060405180910390f35b61095f6004803603602081101561094957600080fd5b81019080803590602001909291905050506112d8565b60405180821515815260200191505060405180910390f35b6109b96004803603602081101561098d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611305565b005b6109c361135a565b6040518082815260200191505060405180910390f35b610a05600480360360208110156109ef57600080fd5b8101908080359060200190929190505050611373565b6040518082815260200191505060405180910390f35b610a4760048036036020811015610a3157600080fd5b8101908080359060200190929190505050611393565b6040518082815260200191505060405180910390f35b610a656113b3565b6040518082815260200191505060405180910390f35b610aa760048036036020811015610a9157600080fd5b81019080803590602001909291905050506113cc565b005b610ad560048036036020811015610abf57600080fd5b81019080803590602001909291905050506113f8565b6040518082815260200191505060405180910390f35b8060016000848152602001908152602001600020600301819055505050565b60008060036006811115610b1a57fe5b90508091505090565b60006001600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60003373ffffffffffffffffffffffffffffffffffffffff1631905090565b600115156001600083815260200190815260200160002060000160009054906101000a900460ff1615151415610be65760006001600083815260200190815260200160002060000160006101000a81548160ff021916908315150217905550610c15565b600180600083815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b50565b6000806002811115610c2657fe5b905090565b6000806000806000806000806000899350600160008b815260200190815260200160002060000160009054906101000a900460ff169850600160008b815260200190815260200160002060000160019054906101000a900460ff169750600160008b8152602001908152602001600020600101549650600160008b8152602001908152602001600020600201549550600160008b8152602001908152602001600020600301549450600160008b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600160008b815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600160008b815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509193959799909294969850565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b60006001600083815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b60006001600083815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016002811115610f2957fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b600115156001600083815260200190815260200160002060000160019054906101000a900460ff1615151415610fd55760006001600083815260200190815260200160002060000160016101000a81548160ff021916908315150217905550611004565b600180600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055505b50565b8060016000848152602001908152602001600020600201819055505050565b60028081111561103257fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b600060028081111561108857fe5b905090565b6002818154811061109a57fe5b906000526020600020016000915090505481565b8060016000848152602001908152602001600020600101819055505050565b600080600160068111156110dd57fe5b90508091505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600060016000838152602001908152602001600020600301549050919050565b6000806002600681111561118b57fe5b90508091505090565b6000600160028111156111a357fe5b905090565b336001600083815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600083815260200190815260200160002060000160009054906101000a900460ff169050919050565b60006001600083815260200190815260200160002060000160019054906101000a900460ff169050919050565b6000600281111561131257fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b6000806005600681111561136a57fe5b90508091505090565b600060016000838152602001908152602001600020600201549050919050565b600060016000838152602001908152602001600020600401549050919050565b600080600460068111156113c357fe5b90508091505090565b600281908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001600083815260200190815260200160002060010154905091905056fea2646970667358221220acaccc5cfe860344b15171be01d409c73b45f08bf635b8e2eefd2d37ebe0657564736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c8063804c2cf811610125578063baed3290116100ad578063f74bb9141161007c578063f74bb914146109d9578063fb5f39e214610a1b578063fcd2cf7614610a5d578063fd1d909214610a7b578063fe3c7d3e14610aa95761021c565b8063baed3290146108ef578063db7ef4c814610933578063e2ed781c14610977578063efbfdd45146109bb5761021c565b80638f282b87116100f45780638f282b87146107f95780639a90b568146108175780639dfda79414610835578063a925c06514610863578063b38854be146108bb5761021c565b8063804c2cf81461070d578063893d20e81461072b5780638b3f863f1461075f5780638d6fe2bf146107b75761021c565b80633b928b7b116101a85780635f5d6e63116101775780635f5d6e63146105f957806363a579d5146106315780636c07681f14610675578063748a070e146106935780637e82e70a146106d55761021c565b80633b928b7b1461046f5780633e4ff0561461052f5780633e8d5562146105875780634a409359146105cb5761021c565b8063136439dd116101ef578063136439dd146102ed5780632388ec4c1461031b5780632cd6d05b146103395780633a88162e146103f95780633b573e21146104175761021c565b806302d70d5e146102215780630a5ba91b146102595780630d5fe8d01461027757806312065fe0146102cf575b600080fd5b6102576004803603604081101561023757600080fd5b810190808035906020019092919080359060200190929190505050610aeb565b005b610261610b0a565b6040518082815260200191505060405180910390f35b6102a36004803603602081101561028d57600080fd5b8101908080359060200190929190505050610b23565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d7610b63565b6040518082815260200191505060405180910390f35b6103196004803603602081101561030357600080fd5b8101908080359060200190929190505050610b82565b005b610323610c18565b6040518082815260200191505060405180910390f35b6103656004803603602081101561034f57600080fd5b8101908080359060200190929190505050610c2b565b604051808a1515815260200189151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001995050505050505050505060405180910390f35b610401610d8b565b6040518082815260200191505060405180910390f35b6104436004803603602081101561042d57600080fd5b8101908080359060200190929190505050610dd4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61049b6004803603602081101561048557600080fd5b8101908080359060200190929190505050610e14565b604051808a1515815260200189151581526020018881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001995050505050505050505060405180910390f35b61055b6004803603602081101561054557600080fd5b8101908080359060200190929190505050610edc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c96004803603602081101561059d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b005b6105f7600480360360208110156105e157600080fd5b8101908080359060200190929190505050610f71565b005b61062f6004803603604081101561060f57600080fd5b810190808035906020019092919080359060200190929190505050611007565b005b6106736004803603602081101561064757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611026565b005b61067d61107a565b6040518082815260200191505060405180910390f35b6106bf600480360360208110156106a957600080fd5b810190808035906020019092919050505061108d565b6040518082815260200191505060405180910390f35b61070b600480360360408110156106eb57600080fd5b8101908080359060200190929190803590602001909291905050506110ae565b005b6107156110cd565b6040518082815260200191505060405180910390f35b6107336110e6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107a16004803603602081101561077557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611110565b6040518082815260200191505060405180910390f35b6107e3600480360360208110156107cd57600080fd5b810190808035906020019092919050505061115b565b6040518082815260200191505060405180910390f35b61080161117b565b6040518082815260200191505060405180910390f35b61081f611194565b6040518082815260200191505060405180910390f35b6108616004803603602081101561084b57600080fd5b81019080803590602001909291905050506111a8565b005b61088f6004803603602081101561087957600080fd5b8101908080359060200190929190505050611200565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108c3611240565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61091b6004803603602081101561090557600080fd5b81019080803590602001909291905050506112ab565b60405180821515815260200191505060405180910390f35b61095f6004803603602081101561094957600080fd5b81019080803590602001909291905050506112d8565b60405180821515815260200191505060405180910390f35b6109b96004803603602081101561098d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611305565b005b6109c361135a565b6040518082815260200191505060405180910390f35b610a05600480360360208110156109ef57600080fd5b8101908080359060200190929190505050611373565b6040518082815260200191505060405180910390f35b610a4760048036036020811015610a3157600080fd5b8101908080359060200190929190505050611393565b6040518082815260200191505060405180910390f35b610a656113b3565b6040518082815260200191505060405180910390f35b610aa760048036036020811015610a9157600080fd5b81019080803590602001909291905050506113cc565b005b610ad560048036036020811015610abf57600080fd5b81019080803590602001909291905050506113f8565b6040518082815260200191505060405180910390f35b8060016000848152602001908152602001600020600301819055505050565b60008060036006811115610b1a57fe5b90508091505090565b60006001600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60003373ffffffffffffffffffffffffffffffffffffffff1631905090565b600115156001600083815260200190815260200160002060000160009054906101000a900460ff1615151415610be65760006001600083815260200190815260200160002060000160006101000a81548160ff021916908315150217905550610c15565b600180600083815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b50565b6000806002811115610c2657fe5b905090565b6000806000806000806000806000899350600160008b815260200190815260200160002060000160009054906101000a900460ff169850600160008b815260200190815260200160002060000160019054906101000a900460ff169750600160008b8152602001908152602001600020600101549650600160008b8152602001908152602001600020600201549550600160008b8152602001908152602001600020600301549450600160008b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600160008b815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600160008b815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509193959799909294969850565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b60006001600083815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905089565b60006001600083815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60016002811115610f2957fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b600115156001600083815260200190815260200160002060000160019054906101000a900460ff1615151415610fd55760006001600083815260200190815260200160002060000160016101000a81548160ff021916908315150217905550611004565b600180600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055505b50565b8060016000848152602001908152602001600020600201819055505050565b60028081111561103257fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b600060028081111561108857fe5b905090565b6002818154811061109a57fe5b906000526020600020016000915090505481565b8060016000848152602001908152602001600020600101819055505050565b600080600160068111156110dd57fe5b90508091505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600060016000838152602001908152602001600020600301549050919050565b6000806002600681111561118b57fe5b90508091505090565b6000600160028111156111a357fe5b905090565b336001600083815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600083815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600083815260200190815260200160002060000160009054906101000a900460ff169050919050565b60006001600083815260200190815260200160002060000160019054906101000a900460ff169050919050565b6000600281111561131257fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b6000806005600681111561136a57fe5b90508091505090565b600060016000838152602001908152602001600020600201549050919050565b600060016000838152602001908152602001600020600401549050919050565b600080600460068111156113c357fe5b90508091505090565b600281908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001600083815260200190815260200160002060010154905091905056fea2646970667358221220acaccc5cfe860344b15171be01d409c73b45f08bf635b8e2eefd2d37ebe0657564736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "52:587:4:-:0;;;118:87;;;;;;;;;;159:10;150:6;;:19;;;;;;;;;;;;;;;;;;180:17;190:6;;;;;;;;;;;180:9;;;:17;;:::i;:::-;52:587;;189:114:0;282:12;277:18;;;;;;;;249:5;:20;255:13;249:20;;;;;;;;;;;;;;;:25;;:46;;;;189:114;:::o;52:587:4:-;;;;;;;",
  "deployedSourceMap": "52:587:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2178:100:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1520:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2401:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1328:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;343:203:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;686:91:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;572:639:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2528:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;498:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3571:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;311:118:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2902:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3700:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;437:122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;882:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;540:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3231:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2052:118;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:82:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;567:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2286:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1932:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;783:93:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3347:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3451:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;231:106:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2657:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2779:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;189:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1654:122:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3814:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3932:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1784:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1432:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3115:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2178:100;2265:5;2245:4;:11;2250:5;2245:11;;;;;;;;;;;:17;;:25;;;;2178:100;;:::o;1520:126::-;1566:4;1583:8;1599:17;1594:23;;;;;;;;1583:34;;1635:3;1628:10;;;1520:126;:::o;2401:119::-;2467:7;2494:4;:11;2499:5;2494:11;;;;;;;;;;;:18;;;;;;;;;;;;2487:25;;2401:119;;;:::o;1328:96::-;1371:7;1398:10;:18;;;1391:25;;1328:96;:::o;343:203:4:-;418:4;394:28;;:4;:11;399:5;394:11;;;;;;;;;;;:20;;;;;;;;;;;;:28;;;391:148;;;462:5;439:4;:11;444:5;439:11;;;;;;;;;;;:20;;;:28;;;;;;;;;;;;;;;;;;391:148;;;523:4;500;:11;505:5;500:11;;;;;;;;;;;:20;;;:27;;;;;;;;;;;;;;;;;;391:148;343:203;:::o;686:91:0:-;727:4;756:12;751:18;;;;;;;;744:25;;686:91;:::o;572:639:1:-;622:13;646:11;668:13;692:11;714:10;735;756:22;789:23;823;874:5;869:10;;901:4;:11;906:5;901:11;;;;;;;;;;;:20;;;;;;;;;;;;890:31;;941:4;:11;946:5;941:11;;;;;;;;;;;:18;;;;;;;;;;;;932:27;;978:4;:11;983:5;978:11;;;;;;;;;;;:17;;;970:25;;1015:4;:11;1020:5;1015:11;;;;;;;;;;;:18;;;1006:27;;1052:4;:11;1057:5;1052:11;;;;;;;;;;;:17;;;1044:25;;1089:4;:11;1094:5;1089:11;;;;;;;;;;;:18;;;;;;;;;;;;1080:27;;1128:4;:11;1133:5;1128:11;;;;;;;;;;;:19;;;;;;;;;;;;1118:29;;1176:4;:11;1181:5;1176:11;;;;;;;;;;;:27;;;;;;;;;;;;1158:45;;572:639;;;;;;;;;;;:::o;1219:101::-;1265:4;1290:5;:17;1296:10;1290:17;;;;;;;;;;;;;;;:22;;;1283:29;;1219:101;:::o;2528:121::-;2595:7;2622:4;:11;2627:5;2622:11;;;;;;;;;;;:19;;;;;;;;;;;;2615:26;;2528:121;;;:::o;498:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3571:121::-;3630:7;3657:4;:11;3662:5;3657:11;;;;;;;;;;;:27;;;;;;;;;;;;3650:34;;3571:121;;;:::o;311:118:0:-;407:13;402:19;;;;;;;;373:5;:21;379:14;373:21;;;;;;;;;;;;;;;:26;;:48;;;;311:118;:::o;2902:205:1:-;2983:4;2961:26;;:4;:11;2966:5;2961:11;;;;;;;;;;;:18;;;;;;;;;;;;:26;;;2958:142;;;3025:5;3004:4;:11;3009:5;3004:11;;;;;;;;;;;:18;;;:26;;;;;;;;;;;;;;;;;;2958:142;;;3084:4;3063;:11;3068:5;3063:11;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;2958:142;2902:205;:::o;3700:106::-;3792:6;3771:4;:11;3776:5;3771:11;;;;;;;;;;;:18;;:27;;;;3700:106;;:::o;437:122:0:-;536:14;531:20;;;;;;;;501:5;:22;507:15;501:22;;;;;;;;;;;;;;;:27;;:50;;;;437:122;:::o;882:95::-;925:4;954:14;949:20;;;;;;;;942:27;;882:95;:::o;540:23:1:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3231:102::-;3320:5;3300:4;:11;3305:5;3300:11;;;;;;;;;;;:17;;:25;;;;3231:102;;:::o;2052:118::-;2094:4;2111:8;2127:13;2122:19;;;;;;;;2111:30;;2159:3;2152:10;;;2052:118;:::o;554:82:4:-;595:7;622:6;;;;;;;;;;;615:13;;554:82;:::o;567:111:0:-;624:4;653:5;:11;659:4;653:11;;;;;;;;;;;;;;;:16;;;641:29;;567:111;;;:::o;2286:107:1:-;2344:4;2368;:11;2373:5;2368:11;;;;;;;;;;;:17;;;2361:24;;2286:107;;;:::o;1932:112::-;1971:4;1988:8;2004:10;1999:16;;;;;;;;1988:27;;2033:3;2026:10;;;1932:112;:::o;783:93:0:-;825:4;854:13;849:19;;;;;;;;842:26;;783:93;:::o;3347:96:1:-;3425:10;3403:4;:11;3408:5;3403:11;;;;;;;;;;;:19;;;:32;;;;;;;;;;;;;;;;;;3347:96;:::o;3451:112::-;3509:7;3536:4;:11;3541:5;3536:11;;;;;;;;;;;:19;;;;;;;;;;;;3529:26;;3451:112;;;:::o;231:106:4:-;266:7;295:10;286:6;;:19;;;;;;;;;;;;;;;;;;323:6;;;;;;;;;;;316:13;;231:106;:::o;2657:113:1:-;2718:4;2742;:11;2747:5;2742:11;;;;;;;;;;;:20;;;;;;;;;;;;2735:27;;2657:113;;;:::o;2779:111::-;2838:4;2863;:11;2868:5;2863:11;;;;;;;;;;;:18;;;;;;;;;;;;2856:25;;2779:111;;;:::o;189:114:0:-;282:12;277:18;;;;;;;;249:5;:20;255:13;249:20;;;;;;;;;;;;;;;:25;;:46;;;;189:114;:::o;1654:122:1:-;1698:4;1715:8;1731:15;1726:21;;;;;;;;1715:32;;1765:3;1758:10;;;1654:122;:::o;3814:110::-;3871:7;3898:4;:11;3903:5;3898:11;;;;;;;;;;;:18;;;3891:25;;3814:110;;;:::o;3932:105::-;3985:7;4012:4;:11;4017:5;4012:11;;;;;;;;;;;:17;;;4005:24;;3932:105;;;:::o;1784:140::-;1837:4;1854:8;1870:24;1865:30;;;;;;;;1854:41;;1913:3;1906:10;;;1784:140;:::o;1432:80::-;1485:6;1497;1485:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:80;:::o;3115:108::-;3172:7;3198:4;:11;3203:5;3198:11;;;;;;;;;;;:17;;;3191:24;;3115:108;;;:::o",
  "source": "pragma solidity >=0.6.0;\r\n\r\nimport \"./Base.sol\";\r\n\r\ncontract Core is Base {\r\n    //Fields\r\n    address _owner;\r\n\r\n    constructor() public {\r\n        _owner = msg.sender;\r\n        setFarmer(_owner);\r\n    }\r\n\r\n\r\n    //Methods:\r\n    function ownable() public returns (address) {\r\n        _owner = msg.sender;\r\n        return _owner;\r\n    }\r\n    function pause(uint256 cowId) public {\r\n        if(cows[cowId].isPaused == true) {\r\n            cows[cowId].isPaused = false;\r\n        } else {\r\n            cows[cowId].isPaused = true;\r\n        }\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n}",
  "sourcePath": "C:/Users/samfa/Documents/BCNanodegree/project3/contracts/Core.sol",
  "ast": {
    "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Core.sol",
    "exportedSymbols": {
      "Core": [
        1082
      ]
    },
    "id": 1083,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1013,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Base.sol",
        "file": "./Base.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1083,
        "sourceUnit": 699,
        "src": "28:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1015,
              "name": "Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 698,
              "src": "69:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Base_$698",
                "typeString": "contract Base"
              }
            },
            "id": 1016,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:4"
          }
        ],
        "contractDependencies": [
          116,
          698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1082,
        "linearizedBaseContracts": [
          1082,
          698,
          116
        ],
        "name": "Core",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1018,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1082,
            "src": "95:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1017,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "95:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "139:66:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1021,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "150:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "159:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "159:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "150:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "150:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1027,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "190:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1026,
                      "name": "setFarmer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "180:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "180:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "180:17:4"
                }
              ]
            },
            "documentation": null,
            "id": 1031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:2:4"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:0:4"
            },
            "scope": 1082,
            "src": "118:87:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "275:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1036,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "286:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1037,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "295:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "295:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "286:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "286:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "323:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1035,
                  "id": 1042,
                  "nodeType": "Return",
                  "src": "316:13:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b38854be",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:2:4"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1044,
                  "src": "266:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:9:4"
            },
            "scope": 1082,
            "src": "231:106:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "380:166:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1049,
                          "name": "cows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "394:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                            "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                          }
                        },
                        "id": 1051,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1050,
                          "name": "cowId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "399:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "394:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cow_$143_storage",
                          "typeString": "struct Base.Cow storage ref"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "394:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "418:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "394:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1070,
                    "nodeType": "Block",
                    "src": "485:54:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1063,
                                "name": "cows",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 155,
                                "src": "500:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                                  "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                                }
                              },
                              "id": 1065,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1064,
                                "name": "cowId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1046,
                                "src": "505:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "500:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cow_$143_storage",
                                "typeString": "struct Base.Cow storage ref"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 123,
                            "src": "500:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "523:4:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "500:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1069,
                        "nodeType": "ExpressionStatement",
                        "src": "500:27:4"
                      }
                    ]
                  },
                  "id": 1071,
                  "nodeType": "IfStatement",
                  "src": "391:148:4",
                  "trueBody": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "424:55:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1055,
                                "name": "cows",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 155,
                                "src": "439:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                                  "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                                }
                              },
                              "id": 1057,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1056,
                                "name": "cowId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1046,
                                "src": "444:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "439:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cow_$143_storage",
                                "typeString": "struct Base.Cow storage ref"
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 123,
                            "src": "439:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "462:5:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "439:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "439:28:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "136439dd",
            "id": 1073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "cowId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1073,
                  "src": "358:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:15:4"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:4"
            },
            "scope": 1082,
            "src": "343:203:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "604:32:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1078,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "622:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1077,
                  "id": 1079,
                  "nodeType": "Return",
                  "src": "615:13:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893d20e8",
            "id": 1081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:4"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1081,
                  "src": "595:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:9:4"
            },
            "scope": 1082,
            "src": "554:82:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1083,
        "src": "52:587:4"
      }
    ],
    "src": "0:639:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Core.sol",
    "exportedSymbols": {
      "Core": [
        1082
      ]
    },
    "id": 1083,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1013,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project3/contracts/Base.sol",
        "file": "./Base.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1083,
        "sourceUnit": 699,
        "src": "28:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1015,
              "name": "Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 698,
              "src": "69:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Base_$698",
                "typeString": "contract Base"
              }
            },
            "id": 1016,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:4"
          }
        ],
        "contractDependencies": [
          116,
          698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1082,
        "linearizedBaseContracts": [
          1082,
          698,
          116
        ],
        "name": "Core",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1018,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1082,
            "src": "95:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1017,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "95:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "139:66:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1021,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "150:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "159:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "159:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "150:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "150:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1027,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "190:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1026,
                      "name": "setFarmer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "180:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "180:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "180:17:4"
                }
              ]
            },
            "documentation": null,
            "id": 1031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:2:4"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:0:4"
            },
            "scope": 1082,
            "src": "118:87:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "275:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1036,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "286:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1037,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "295:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "295:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "286:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "286:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "323:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1035,
                  "id": 1042,
                  "nodeType": "Return",
                  "src": "316:13:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b38854be",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:2:4"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1044,
                  "src": "266:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:9:4"
            },
            "scope": 1082,
            "src": "231:106:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "380:166:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1049,
                          "name": "cows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "394:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                            "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                          }
                        },
                        "id": 1051,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1050,
                          "name": "cowId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "399:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "394:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cow_$143_storage",
                          "typeString": "struct Base.Cow storage ref"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "394:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "418:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "394:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1070,
                    "nodeType": "Block",
                    "src": "485:54:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1063,
                                "name": "cows",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 155,
                                "src": "500:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                                  "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                                }
                              },
                              "id": 1065,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1064,
                                "name": "cowId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1046,
                                "src": "505:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "500:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cow_$143_storage",
                                "typeString": "struct Base.Cow storage ref"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 123,
                            "src": "500:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "523:4:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "500:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1069,
                        "nodeType": "ExpressionStatement",
                        "src": "500:27:4"
                      }
                    ]
                  },
                  "id": 1071,
                  "nodeType": "IfStatement",
                  "src": "391:148:4",
                  "trueBody": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "424:55:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1055,
                                "name": "cows",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 155,
                                "src": "439:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Cow_$143_storage_$",
                                  "typeString": "mapping(uint256 => struct Base.Cow storage ref)"
                                }
                              },
                              "id": 1057,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1056,
                                "name": "cowId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1046,
                                "src": "444:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "439:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cow_$143_storage",
                                "typeString": "struct Base.Cow storage ref"
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 123,
                            "src": "439:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "462:5:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "439:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "439:28:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "136439dd",
            "id": 1073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "cowId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1073,
                  "src": "358:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:15:4"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:4"
            },
            "scope": 1082,
            "src": "343:203:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "604:32:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1078,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "622:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1077,
                  "id": 1079,
                  "nodeType": "Return",
                  "src": "615:13:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893d20e8",
            "id": 1081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:4"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1081,
                  "src": "595:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:9:4"
            },
            "scope": 1082,
            "src": "554:82:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1083,
        "src": "52:587:4"
      }
    ],
    "src": "0:639:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-15T00:17:03.268Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}